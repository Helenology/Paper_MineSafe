ylim = c(-5.5, -1.5),
yaxt ="n") # 统一y轴坐标
axis(side = 2, # 操作y轴
at = seq(0, 2, by=0.1),
labels = seq(0, 2, by=0.1)
)
title(paste0('N=', thres),
line=0.7,   # 标题的位置
font.main=1 # 标题取消加粗
)
}
plot_box(100, 1.1)
plot_box(500, 1.1)
plot_box(1000, 1.1)
plot_box = function(thres, times){
boxplot(Time~Estimator, time_data[time_data$N == thres, ],
xlab="", cex.axis = times,
cex.lab = times,
ylim = c(0, 2s),
par(mfrow = c(1, 3))
plot_box = function(thres, times){
boxplot(Time~Estimator, time_data[time_data$N == thres, ],
xlab="", cex.axis = times,
cex.lab = times,
ylim = c(0, 2),
yaxt ="n") # 统一y轴坐标
axis(side = 2, # 操作y轴
at = seq(0, 2, by=0.1),
labels = seq(0, 2, by=0.1)
)
title(paste0('N=', thres),
line=0.7,   # 标题的位置
font.main=1 # 标题取消加粗
)
}
plot_box(100, 1.1)
plot_box(500, 1.1)
plot_box(1000, 1.1)
par(mfrow = c(1, 3))
plot_box = function(thres, times){
boxplot(Time~Estimator, time_data[time_data$N == thres, ],
xlab="", cex.axis = times,
cex.lab = times,
ylim = c(0, 2),
yaxt ="n") # 统一y轴坐标
axis(side = 2, # 操作y轴
at = seq(0, 2, by=0.2),
labels = seq(0, 2, by=0.2)
)
title(paste0('N=', thres),
line=0.7,   # 标题的位置
font.main=1 # 标题取消加粗
)
}
plot_box(100, 1.1)
plot_box(500, 1.1)
plot_box(1000, 1.1)
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R", echo=TRUE)
library(plyr)
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R", echo=TRUE)
par(mfrow = c(1, 3))
plot_box = function(thres, times){
boxplot(Time~Estimator, time_data[time_data$N == thres, ],
xlab="", cex.axis = times,
cex.lab = times,
ylab="Avg Time Cost",
ylim = c(0, 2),
yaxt ="n") # 统一y轴坐标
axis(side = 2, # 操作y轴
at = seq(0, 2, by=0.2),
labels = seq(0, 2, by=0.2)
)
title(paste0('N=', thres),
line=0.7,   # 标题的位置
font.main=1 # 标题取消加粗
)
}
plot_box(100, 1.1)
plot_box(500, 1.1)
plot_box(1000, 1.1)
data1 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=100).csv")
data1 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=100).csv")
data1 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=100).csv")
data2 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=500).csv")
data3 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=1000).csv")
data = rbind(data1, data2, data3)
data = data[, -c(1, 3)]
##################### MSE Comparison #####################
MSE_data = data[, c("N", "CD_mse", "DS_mse", "GPA_CD_mse", "GPA_DS_mse")]
MSE_data$N = as.factor(MSE_data$N)
MSE_data = melt(MSE_data, id=c("N"),
variable.name = "Estimator",
value.name = "MSE")
library(plyr)
library(ggplot2)
library(reshape2)
data1 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=100).csv")
data2 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=500).csv")
data3 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=1000).csv")
data = rbind(data1, data2, data3)
data = data[, -c(1, 3)]
##################### MSE Comparison #####################
MSE_data = data[, c("N", "CD_mse", "DS_mse", "GPA_CD_mse", "GPA_DS_mse")]
MSE_data$N = as.factor(MSE_data$N)
MSE_data = melt(MSE_data, id=c("N"),
variable.name = "Estimator",
value.name = "MSE")
MSE_data$Estimator = factor(MSE_data$Estimator,
levels = c('CD_mse', 'DS_mse', 'GPA_CD_mse', 'GPA_DS_mse'),
labels = c("CD", "DS", "GPA-CD", "GPA-DS"))
str(MSE_data)
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres, times){
boxplot(log(MSE)~Estimator, MSE_data[MSE_data$N == thres, ],
xlab="",
ylab="",
ylim = c(-5.5, -1.5),
main=paste0('N=', thres),
cex.lab = times,
cex.axis = times,
cex.main=times
)
}
plot_box(100, 2.4)
plot_box(500, 2.4)
plot_box(1000, 2.4)
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R", echo=TRUE)
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R", echo=TRUE)
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R", echo=TRUE)
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R", echo=TRUE)
library(plyr)
library(ggplot2)
library(reshape2)
data1 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=100).csv")
data2 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=500).csv")
data3 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=1000).csv")
data = rbind(data1, data2, data3)
data = data[, -c(1, 3)]
##################### MSE Comparison #####################
MSE_data = data[, c("N", "CD_mse", "DS_mse", "GPA_CD_mse", "GPA_DS_mse")]
MSE_data$N = as.factor(MSE_data$N)
MSE_data = melt(MSE_data, id=c("N"),
variable.name = "Estimator",
value.name = "MSE")
MSE_data$Estimator = factor(MSE_data$Estimator,
levels = c('CD_mse', 'DS_mse', 'GPA_CD_mse', 'GPA_DS_mse'),
labels = c("CD", "DS", "GPA-CD", "GPA-DS"))
str(MSE_data)
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
# 1. 创建画布
png(
filename = "name.png", # 文件名称
width = 10,            # 宽
height = 10,           # 高
units = "in",          # 单位
bg = "white",          # 背景颜色
res = 300)             # 分辨率
# 2. 绘图
plot(1:5)
# 3. 关闭画布
dev.off()
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
# 1. 创建画布
pdf("./iris_box_ggpubr.pdf")
# 2. 绘图
plot(1:5)
# 3. 关闭画布
dev.off()
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres, times){
boxplot(log(MSE)~Estimator, MSE_data[MSE_data$N == thres, ],
xlab="",
ylab="",
ylim = c(-5.5, -1.5),
main=paste0('N=', thres),
cex.lab = times,
cex.axis = times,
cex.main=times
)
}
# 1. 创建画布
png("./logMSE_N=100.pdf")
# 2. 绘图
plot_box(100, 2.4)
# 3. 关闭画布
dev.off()
# 1. 创建画布
pdf("./logMSE_N=100.pdf")
# 2. 绘图
plot_box(100, 2.4)
# 3. 关闭画布
dev.off()
# 1. 创建画布
pdf("./logMSE_N=100.pdf")
# 2. 绘图
plot_box(100, 2.1)
# 3. 关闭画布
dev.off()
# 1. 创建画布
pdf("./logMSE_N=100.pdf")
# 2. 绘图
plot_box(100, 2.)
# 3. 关闭画布
dev.off()
# 1. 创建画布
pdf("./logMSE_N=100.pdf")
# 2. 绘图
plot_box(100, 1.5)
# 3. 关闭画布
dev.off()
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres, times){
boxplot(log(MSE)~Estimator, MSE_data[MSE_data$N == thres, ],
xlab="",
ylab="",
ylim = c(-5.5, -1.5),
main=paste0('N=', thres),
cex.lab = times,
cex.axis = times,
cex.main=times
)
}
pdf("./logMSE_N=100.pdf") # create painting environment
plot_box(100, 1.5) # boxplot
dev.off() # close the environment
pdf("./logMSE_N=500.pdf") # create painting environment
plot_box(500, 1.5) # boxplot
dev.off() # close the environment
pdf("./logMSE_N=1000.pdf") # create painting environment
plot_box(1000, 1.5) # boxplot
dev.off() # close the environment
##################### Time Comparison #####################
time_data = data[, c("N", "CD_time", "DS_time", "GPA_CD_time", "GPA_DS_time")]
time_data$N = as.factor(time_data$N)
time_data = melt(time_data, id=c("N"),
variable.name = "Estimator",
value.name = "Time")
time_data$Estimator = factor(time_data$Estimator,
levels = c('CD_time', 'DS_time', 'GPA_CD_time', 'GPA_DS_time'),
labels = c("CD", "DS", "GPA-CD", "GPA-DS"))
str(time_data)
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres, times){
boxplot(Time~Estimator, time_data[time_data$N == thres, ],
ylim = c(0, 2),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = times,
cex.axis = times,
main=paste0('N=', thres),
cex.main=times)
}
pdf("./time_N=100.pdf") # create painting environment
plot_box(100, 1.5) # boxplot
dev.off() # close the environment
pdf("./time_N=500.pdf") # create painting environment
plot_box(500, 1.5) # boxplot
dev.off() # close the environment
pdf("./time_N=1000.pdf") # create painting environment
plot_box(1000, 1.5) # boxplot
dev.off() # close the environment
library(plyr)
library(plyr)
library(ggplot2)
library(reshape2)
data1 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=100).csv")
data2 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/simulation(N=500).csv")
library(plyr)
library(ggplot2)
library(reshape2)
data1 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/results/simulation(N=100).csv")
data2 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/results/simulation(N=500).csv")
data3 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/results/simulation(N=1000).csv")
data = rbind(data1, data2, data3)
data = data[, -c(1, 3)]
##################### MSE Comparison #####################
MSE_data = data[, c("N", "CD_mse", "DS_mse", "GPA_CD_mse", "GPA_DS_mse")]
MSE_data$N = as.factor(MSE_data$N)
MSE_data = melt(MSE_data, id=c("N"),
variable.name = "Estimator",
value.name = "MSE")
MSE_data$Estimator = factor(MSE_data$Estimator,
levels = c('CD_mse', 'DS_mse', 'GPA_CD_mse', 'GPA_DS_mse'),
labels = c("CD", "DS", "GPA-CD", "GPA-DS"))
str(MSE_data)
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres, times){
boxplot(log(MSE)~Estimator, MSE_data[MSE_data$N == thres, ],
xlab="",
ylab="",
ylim = c(-5.5, -1.5),
main=paste0('N=', thres),
cex.lab = times,
cex.axis = times,
cex.main=times
)
}
pdf("./logMSE_N=100.pdf") # create painting environment
plot_box(100, 1.5) # boxplot
dev.off() # close the environment
pdf("./logMSE_N=500.pdf") # create painting environment
plot_box(500, 1.5) # boxplot
dev.off() # close the environment
pdf("./logMSE_N=1000.pdf") # create painting environment
plot_box(1000, 1.5) # boxplot
dev.off() # close the environment
pdf("./logMSE_N=100.pdf") # create painting environment
plot_box(100, 1.5) # boxplot
dev.off() # close the environment
pdf("./logMSE_N=500.pdf") # create painting environment
plot_box(500, 1.5) # boxplot
dev.off() # close the environment
pdf("./logMSE_N=1000.pdf") # create painting environment
plot_box(1000, 1.5) # boxplot
dev.off() # close the environment
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R")
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R")
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R")
source("~/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/plot_simulation.R")
library(plyr)
library(ggplot2)
library(reshape2)
data1 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/results/simulation(N=100).csv")
data2 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/results/simulation(N=500).csv")
data3 = read.csv("/Users/helenology/Documents/GitHub/Paper_MineSafe/MineSafe-2024/simulation/results/simulation(N=1000).csv")
data = rbind(data1, data2, data3)
data = data[, -c(1, 3)]
##################### MSE Comparison #####################
MSE_data = data[, c("N", "CD_mse", "DS_mse", "GPA_CD_mse", "GPA_DS_mse")]
MSE_data$N = as.factor(MSE_data$N)
MSE_data = melt(MSE_data, id=c("N"),
variable.name = "Estimator",
value.name = "MSE")
MSE_data$Estimator = factor(MSE_data$Estimator,
levels = c('CD_mse', 'DS_mse', 'GPA_CD_mse', 'GPA_DS_mse'),
labels = c("CD", "DS", "GPA-CD", "GPA-DS"))
str(MSE_data)
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
pdf("./results1/logMSE_N=100.pdf") # create painting environment
##################### Time Comparison #####################
time_data = data[, c("N", "CD_time", "DS_time", "GPA_CD_time", "GPA_DS_time")]
time_data$N = as.factor(time_data$N)
time_data = melt(time_data, id=c("N"),
variable.name = "Estimator",
value.name = "Time")
##################### Time Comparison #####################
time_data = data[, c("N", "CD_time", "DS_time", "GPA_CD_time", "GPA_DS_time")]
time_data$N = as.factor(time_data$N)
time_data = melt(time_data, id=c("N"),
variable.name = "Estimator",
value.name = "Time")
time_data$Estimator = factor(log(time_data)$Estimator,
levels = c('CD_time', 'DS_time', 'GPA_CD_time', 'GPA_DS_time'),
labels = c("CD", "DS", "GPA-CD", "GPA-DS"))
##################### Time Comparison #####################
time_data = data[, c("N", "CD_time", "DS_time", "GPA_CD_time", "GPA_DS_time")]
time_data$N = as.factor(time_data$N)
time_data = melt(time_data, id=c("N"),
variable.name = "Estimator",
value.name = "Time")
View(time_data)
time_data$Estimator = factor(time_data$Estimator,
levels = c('CD_time', 'DS_time', 'GPA_CD_time', 'GPA_DS_time'),
labels = c("CD", "DS", "GPA-CD", "GPA-DS"))
str(time_data)
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres, times){
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
ylim = c(0, 2),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = times,
cex.axis = times,
main=paste0('N=', thres),
cex.main=times)
}
pdf("./results/logtime_N=100.pdf") # create painting environment
plot_box(100, 1.5) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=500.pdf") # create painting environment
plot_box(500, 1.5) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=1000.pdf") # create painting environment
plot_box(1000, 1.5) # boxplot
dev.off() # close the environment
View(time_data)
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres, times){
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
ylim = c(0, 2),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = times,
cex.axis = times,
main=paste0('N=', thres),
cex.main=times)
}
times = 1.5
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
ylim = c(0, 2),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = times,
cex.axis = times,
main=paste0('N=', thres),
cex.main=times)
times = 1.5
thres = 100
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
ylim = c(0, 2),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = times,
cex.axis = times,
main=paste0('N=', thres),
cex.main=times)
time_data$N
time_data$N == 100
View(time_data)
View(time_data)
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres, times){
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
ylim = c(0, 2),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = times,
cex.axis = times,
main=paste0('N=', thres),
cex.main=times)
}
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres){
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
ylim = c(0, 2),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = 1.5,
cex.axis = 1.5,
main=paste0('N=', thres),
cex.main=1.5)
}
pdf("./results/logtime_N=100.pdf") # create painting environment
plot_box(100) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=500.pdf") # create painting environment
plot_box(500) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=1000.pdf") # create painting environment
plot_box(1000) # boxplot
dev.off() # close the environment
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres){
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
# ylim = c(0, 2),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = 1.5,
cex.axis = 1.5,
main=paste0('N=', thres),
cex.main=1.5)
}
pdf("./results/logtime_N=100.pdf") # create painting environment
plot_box(100) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=500.pdf") # create painting environment
plot_box(500) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=1000.pdf") # create painting environment
plot_box(1000) # boxplot
dev.off() # close the environment
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres){
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
ylim = c(-8, 1),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = 1.5,
cex.axis = 1.5,
main=paste0('N=', thres),
cex.main=1.5)
}
pdf("./results/logtime_N=100.pdf") # create painting environment
plot_box(100) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=500.pdf") # create painting environment
plot_box(500) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=1000.pdf") # create painting environment
plot_box(1000) # boxplot
dev.off() # close the environment
par(mfrow = c(1, 1), oma=c(0.2,0.2,0.2,0.2))
plot_box = function(thres){
boxplot(log(Time)~Estimator, time_data[time_data$N == thres, ],
ylim = c(-8, 1),
xlab="",  ylab="",
# ylab="Avg Time Cost",
cex.lab = 1.5,
cex.axis = 1.5,
main=paste0('N=', thres),
cex.main=1.5)
}
pdf("./results/logtime_N=100.pdf") # create painting environment
plot_box(100) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=500.pdf") # create painting environment
plot_box(500) # boxplot
dev.off() # close the environment
pdf("./results/logtime_N=1000.pdf") # create painting environment
plot_box(1000) # boxplot
dev.off() # close the environment
